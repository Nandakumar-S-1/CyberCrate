<%- include('../layouts/admin/header.ejs') %>
<%- include('../layouts/admin/sidebar.ejs', {currentPage: 'categories'}) %>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">Categories</h2>
    </div>

    <div class="table-responsive mb-4">
        <table class="table table-bordered table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>S.No</th>
                    <th>Category Name</th>
                    <th>Description</th>
                    <th>Offer</th>
                    <th>Listed/Unlisted</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <% if(categories.length > 0) { %>
                    <% categories.forEach((category, index) => { %>
                        <tr>
                            <td><%= (page - 1) * limit + index + 1 %></td>
                            <td><%= category.name %></td>
                            <td><%= category.description %></td>
                            <td><%= category.categoryOffer %>%</td>
                            <td>
                                <span class="fw-bold <%= category.isListed ? 'text-success' : 'text-danger' %>">
                                    <%= category.isListed ? 'Listed' : 'Unlisted' %>
                                </span>
                            </td>
                            <td>
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" role="switch" 
                                           id="listing_<%= category._id %>" 
                                           <%= category.isListed ? 'checked' : '' %>
                                           onchange="toggleListing('<%= category._id %>', this.checked)">
                                </div>
                            </td>
                            <td>
                                <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-sm btn-primary">
                                    <i class="fa-solid fa-pen-to-square"></i> Edit
                                </a>
                            </td>
                        </tr>
                    <% }) %>
                <% } else { %>
                    <tr>
                        <td colspan="7" class="text-center">No categories found</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>

    <% if (totalPages > 1) { %>
        <nav>
            <ul class="pagination justify-content-center">
                <% for(let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= page == i ? 'active' : '' %>">
                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                    </li>
                <% } %>
            </ul>
        </nav>
    <% } %>

    <div class="card">
        <div class="card-body">
            <h5 class="card-title text-primary">Add New Category</h5>
            <form id="addCategoryForm" action="/admin/categories" method="POST">
                <div class="mb-3">
                    <label for="categoryName" class="form-label">Category Name</label>
                    <input type="text" class="form-control" id="categoryName" name="name">
                    <div id="name-error" class="invalid-feedback"></div>
                </div>
                <div class="mb-3">
                    <label for="descriptionId" class="form-label">Description</label>
                    <input type="text" class="form-control" id="descriptionId" name="description">
                    <div id="description-error" class="invalid-feedback"></div>
                </div>
                <div class="mb-3">
                    <label for="categoryOffer" class="form-label">Category Offer (%)</label>
                    <input type="number" class="form-control" id="categoryOffer" name="categoryOffer" min="0" max="100">
                    <div id="categoryOffer-error" class="invalid-feedback"></div>
                </div>
                <div class="form-check form-switch mb-3">
                    <input class="form-check-input" type="checkbox" role="switch" id="isListed" name="isListed" checked>
                    <label class="form-check-label" for="isListed">List Category</label>
                </div>
                <button type="submit" class="btn btn-primary">Add Category</button>
            </form>
        </div>
    </div>
</div>



<script>
   function toggleListing(categoryId, isChecked) {
  const action = isChecked ? "list" : "unlist";

  Swal.fire({
    title: `Are you sure?`,
    text: `You want to ${action} this category?`,
    icon: "warning",
    showCancelButton: true,
    confirmButtonText: `Yes, ${action} it!`,
    cancelButtonText: "Cancel",
  }).then((result) => {
    if (result.isConfirmed) {
      fetch(`/admin/${action}Categories?id=${categoryId}`, {
        method: "GET",
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            Swal.fire({
              title: "Success!",
              text: data.message,
              icon: "success",
              timer: 2000,
              showConfirmButton: false,
            }).then(() => {
              location.reload();
            });
          } else {
            Swal.fire("Error", data.message, "error");
          }
        })
        .catch(() => {
          Swal.fire("Error", "Something went wrong!", "error");
        });
    } else {
      document.getElementById(`listing_${categoryId}`).checked = !isChecked; // Reset toggle
    }
  });
}

</script>

<script>
    function clearErrorMessages() {
        const errElements = document.getElementsByClassName('invalid-feedback');
        Array.from(errElements).forEach(element => {
            element.style.display = "none";
            element.innerText = "";
        });
    }

    function displayErrorMessage(elementId, message) {
        const errElement = document.getElementById(elementId);
        errElement.textContent = message;
        errElement.style.display = "block";
    }

    function validateForm() {
        clearErrorMessages();

        const name = document.getElementById('categoryName').value.trim();
        const description = document.getElementById('descriptionId').value.trim();
        const categoryOffer = document.getElementById('categoryOffer').value.trim();
        let isValid = true;

        // Validate Name
        if (name === "") {
            displayErrorMessage('name-error', 'Name is required. Please enter a category name.');
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            displayErrorMessage('name-error', 'Category name should only contain letters and spaces.');
            isValid = false;
        }

        // Validate Description
        if (description === "") {
            displayErrorMessage('description-error', 'Description is required. Please enter a description.');
            isValid = false;
        }

        // Validate Category Offer (should be between 1 and 99)
        if (categoryOffer === "") {
            displayErrorMessage('categoryOffer-error', 'Category Offer is required.');
            isValid = false;
        } else {
            const offerValue = parseInt(categoryOffer, 10);
            if (isNaN(offerValue) || offerValue < 1 || offerValue > 99) {
                displayErrorMessage('categoryOffer-error', 'Category Offer must be between 1 and 99.');
                isValid = false;
            }
        }

        return isValid;
    }

    function handleFormSubmit(event) {
    event.preventDefault();

    if (!validateForm()) {
        return;
    }

    const name = document.getElementById('categoryName').value;
    const description = document.getElementById('descriptionId').value;
    const categoryOffer = document.getElementById('categoryOffer').value;
    const isListed = document.getElementById('isListed').checked;

    fetch('/admin/categories', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ name, description, categoryOffer, isListed }),
    })
    .then(response => response.json().then(data => ({ status: response.status, body: data })))
    .then(({ status, body }) => {
        if (status === 400) {
            Swal.fire({
                icon: 'warning',
                title: 'Category Exists',
                text: body.error || "Category Already Exists",
            });
        } else if (status === 500) {
            Swal.fire({
                icon: 'error',
                title: 'Server Error',
                text: "Internal Server Error",
            });
        } else if (status === 201) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: body.message,
            }).then(() => {
                location.reload();
            });
        }
    })
    .catch(error => {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: error.message || 'An error occurred while adding the category.',
        });
    });
}

document.getElementById('addCategoryForm').addEventListener('submit', handleFormSubmit);



// function handleFormSubmit(event) {
//     event.preventDefault();

//     if (!validateForm()) {
//         return;
//     }

//     const name = document.getElementById('categoryName').value;
//     const description = document.getElementById('descriptionId').value;
//     const categoryOffer = document.getElementById('categoryOffer').value;
//     const isListed = document.getElementById('isListed').checked;

//     fetch('/admin/categories', {
//         method: 'POST',
//         headers: {
//             'Content-Type': 'application/json',
//         },
//         body: JSON.stringify({ name, description, categoryOffer, isListed }),
//     })
//     .then(response => response.json().then(data => ({ status: response.status, body: data })))
//     .then(({ status, body }) => {
//         if (status === 400) {
//             throw new Error(body.error || "Bad Request");
//         } else if (status === 500) {
//             throw new Error("Internal Server Error");
//         }

//         location.reload(); // Reload only on success
//     })
//     .catch(error => {
//         Swal.fire({
//             icon: 'error',
//             title: 'Oops...',
//             text: error.message || 'An error occurred while adding the category.',
//         });
//     });
// }

    document.getElementById('addCategoryForm').addEventListener('submit', handleFormSubmit);
</script>


<%- include('../layouts/admin/footer.ejs') %>


<style>
    .container{
        margin-left: 18rem;
    }
    .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
    .pagination .page-link {
        color: #0d6efd;
    }
    .pagination .page-link:hover {
        color: #0056b3;
    }
</style>

<!-- 
<script>
    function clearErrorMessages(){
        const errElements=document.getElementsByClassName('error-message');
        Array.from(errElements).forEach(element => {
            element.style.display="none";
            element.innerText=""   ;    
        });
    }

    function displayErrorMessage(elementId,message){
        const errElement=document.getElementById(elementId);
        errElement.textContent=message;
        errElement.style.display="block";

    }


    function validateForm() {
        clearErrorMessages()
        const name=document.getElementsByName('name')[0].value.trim();
        const description=document.getElementsByName('description')[0].value.trim();
        isValid=true;

        if(name===""){
            displayErrorMessage('name-error','Name is required, Please enter name');
            isValid=false;
        }else if(!/^[a-zA-Z\s]+$/.test(name)){
            displayErrorMessage('name-error','Category names should only contain letters and spaces');
            isValid=false;
        }

        if(description===""){
            displayErrorMessage('description-error','Description is required, Please enter description');
            isValid=false;
        }
        return isValid
    }

    function handleFormSubmit(event) {
        event.preventDefault();
        if(!validateForm()){
            return
        }
        const name=document.getElementsByName('name')[0].value;
        const description=document.getElementsByName('description')[0].value;
        const categoryOffer=document.getElementsByName('categoryOffer')[0].value;

        fetch('/admin/categories', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ name, description,categoryOffer }),
        })
            .then(response =>{
                if(!response.ok){
                    return response.json().then(erro=>{
                        throw new Error(erro.message);
                    })
                }
                return response.json();
            })
            .then(data=>{
                location.reload();
            })
            .catch(error=>{
                if(error.message){
                    Swal.fire({
                        icon:'error',
                        title:'OOPS...',
                        text:error.message  ,
                        
                    })
                }
                else{
                    Swal.fire({
                        icon:"error",
                        title:'OOPS...',
                        text:'An error occured wile loading category'
                    })
                }
            })
        }
        document.getElementById('addCategoryForm').addEventListener('submit',handleFormSubmit);
</script> -->
