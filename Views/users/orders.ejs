<%- include('../layouts/user/header.ejs') %>

<style>
    body {
        background-color: #dacbf2;
    }
    .orders-page {
        max-width: 1000px;
        margin: 3rem auto;
        padding: 20px;
        font-family: Arial, sans-serif;
        background-color: #cdbbe9;
        border-radius: 10px;
        border: 1px solid #21123b;
        box-shadow: 0 14px 16px rgba(22, 26, 255, 0.1);
    }

    .orders-header {
        text-align: center;
        font-size: 2rem;
        margin-bottom: 30px;
        color: #6e3bbb;
    }

    .order-card {
        display: flex;
        align-items: flex-start;
        background-color: #fff;
        border: 1px solid #d0b4ff;
        border-radius: 10px;
        margin-bottom: 20px;
        padding: 15px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .order-image {
        flex-shrink: 0;
        width: 150px;
        height: 150px;
        margin-right: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #f9f4ff;
        border-radius: 10px;
    }

    .order-image img {
        max-width: 100%;
        max-height: 100%;
        border-radius: 5px;
    }

    .order-details {
        flex-grow: 1;
    }

    .order-details h3 {
        font-size: 1.2rem;
        font-weight: bold;
        color: #3e0a77;
        margin: 0;
    }

    .order-details p {
        font-size: 0.9rem;
        margin: 5px 0;
        color: #6e3bbb;
    }

    .actions {
        margin-top: 10px;
    }

    .actions button {
        background-color: #6e3bbb;
        color: #fff;
        padding: 8px 12px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-right: 10px;
    }

    .actions button.cancel {
        background-color: #c8aae9;
    }
</style>

<div class="orders-page">
    <h1 class="orders-header">Your Orders</h1>
    <% if (orders.length > 0) { %>
        <% orders.forEach(order => { %>
        <div class="order-card">
            <div class="order-image">
                <img src="/img/products/<%= order.orderedItems[0].product.productImage[0] %>" alt="<%= order.orderedItems[0].product.productName %>">
            </div>
            <div class="order-details">
                <h3><%= order.orderedItems[0].product.productName %></h3>
                <p>Payment Method: <%= order.paymentMethod %></p>

                <p>Status: 
                    <span class="order-status <%= order.status.toLowerCase().replace(/\s+/g, '-') %>">
                        <%= order.status %>
                    </span>
                </p>
                <div class="actions">
                    <button onclick="viewOrder('<%= order.orderId %>')">View</button>
                    <% if (order.status !== 'Delivered' && order.status !== 'Refund Completed') { %>
                        <button onclick="cancelOrder('<%= order.orderId %>')" class="cancel">Cancel Order</button>
                    <% } %>
                </div>
            </div>
        </div>
        <% }) %>
    <% } else { %>
        <p style="text-align: center; color: #130c1e; margin: 5rem;" >No orders found.</p>
    <% } %>
</div>


    <script> function updateStatus(orderId) {
            const form = document.getElementById(`status-form-${orderId}`);
            const formData = new FormData(form);
            fetch('/admin/orderList/updateStatus', {
                method: 'POST',
                body: JSON.stringify(Object.fromEntries(formData)),
                headers: { 'Content-Type': 'application/json' }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Success',
                            text: data.message,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: data.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'Something went wrong!',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
        } 
    </script>

    <script> function togglePaymentDetails(orderId) {
            const details = document.getElementById(`payment-${orderId}`);
            if (details.style.display === 'none') {
                details.style.display = 'block';
            } else {
                details.style.display = 'none';
            }
        }

    //     function viewOrder(orderId) {
    //     document.getElementById("loading-spinner").style.display = "block";
    //     window.location.href = `/profile/orderDetails/${orderId}`;
    // }

        function viewOrder(orderId) {
            // window.location.href = `/orderDetails/${orderId}`;
            window.location.href = `/profile/orderDetails/${orderId}`;
        }

        function cancelOrder(orderId) {
            fetch('/cancelOrder', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ orderId })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Error',
                            text: data.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            title: 'Success',
                            text: data.message,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(()=>{
                            location.reload()
                        })
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'An error occurred while cancelling the order',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
        }

        function returnOrder(orderId) {

        } 
</script>
    <%- include('../layouts/user/footer.ejs') %>